import streamlit as st
import os

def afficher_tutoriel():
    # Configuration de la page
    st.set_page_config(
        page_title="Comprendre Fairseq - Page 1 ",
        page_icon=":books:",
        layout="centered"
    )

    # Titre principal
    st.header(':blue[ Comprendre Fairseq ]')
    st.write(" ")

    # Section 1 : Qu'est-ce que Fairseq ?
    st.subheader(":books: Qu'est-ce que Fairseq ?")
    st.write("""
    Fairseq est une biblioth√®que open-source d√©velopp√©e par Facebook AI Research (FAIR). Elle est sp√©cialement con√ßue pour 
    construire et entra√Æner des mod√®les de s√©quences, notamment pour des t√¢ches comme la traduction automatique, le r√©sum√© de texte, et d'autres t√¢ches 
    de traitement du langage naturel (NLP).
    """)

    st.write("""
    Fairseq supporte plusieurs architectures de mod√®les performants telles que :
    - **Transformer** : Une architecture largement utilis√©e pour la traduction automatique.
    - **BART** : Un mod√®le pour la g√©n√©ration de texte, utilis√© pour des t√¢ches comme le r√©sum√© de texte et la g√©n√©ration de r√©ponses.
    - **RoBERTa** : Une version optimis√©e de BERT, populaire pour diverses t√¢ches de NLP.
    """)

    st.info("üëâ Fairseq est populaire pour son efficacit√© et ses performances de pointe dans les t√¢ches de traitement de s√©quences.")

    st.write(" ")
    
    # Section 2 : Pourquoi utiliser Fairseq ?
    st.subheader(":bulb: Pourquoi utiliser Fairseq ?")
    st.write("""
    Il y a plusieurs raisons d'utiliser Fairseq :
    - **Flexibilit√©** : Fairseq permet de personnaliser les mod√®les et les t√¢ches, ce qui le rend adapt√© √† divers cas d'usage dans le traitement des s√©quences.
    - **Performances de pointe** : Gr√¢ce √† son support des derni√®res architectures de mod√®les, Fairseq a montr√© des performances de pointe dans de nombreuses t√¢ches.
    - **Parall√©lisme** : Fairseq peut traiter efficacement de grandes quantit√©s de donn√©es en parall√®le, ce qui en fait un excellent choix pour les chercheurs et les ing√©nieurs travaillant avec de grandes bases de donn√©es.
    - **Support multi-GPU** : L'entra√Ænement des mod√®les peut √™tre facilement distribu√© sur plusieurs GPU pour une acc√©l√©ration consid√©rable des temps d'entra√Ænement.
    """)

    st.info("üöÄ En r√©sum√©, Fairseq est un outil puissant pour les chercheurs et d√©veloppeurs souhaitant travailler sur des mod√®les de s√©quences √† grande √©chelle.")

    st.write(" ")
    
    # Section 3 : Cas d'usage courants
    st.subheader(":hammer_and_wrench: Cas d'usage courants")
    st.write("""
    Fairseq est principalement utilis√© dans le domaine du traitement du langage naturel (NLP). Voici quelques-uns des cas d'usage courants :
    - **Traduction automatique** : Construire des syst√®mes de traduction de haute qualit√© entre diff√©rentes langues.
    - **Synth√®se de texte** : G√©n√©rer du texte √† partir de donn√©es non structur√©es ou r√©sumer de longs articles en phrases concises.
    - **Question-R√©ponse** : Utiliser Fairseq pour des t√¢ches de g√©n√©ration de r√©ponses √† partir de questions donn√©es.
    - **Classification de texte** : Entra√Æner des mod√®les pour classer automatiquement des documents ou des phrases selon leur contenu.
    """)

    st.info("üåç Fairseq est un atout majeur pour les chercheurs travaillant sur des applications NLP √† l'√©chelle industrielle.")
    st.write(" ")
    st.header("üìò Liens utiles")
    st.markdown("""
    - [Documentation officielle de Fairseq](https://fairseq.readthedocs.io/)
    - [D√©p√¥t GitHub de Fairseq](https://github.com/facebookresearch/fairseq)
    """)
    st.success("Passez un petit quizz pour √©valuer ce que vous venez d'apprendre")
    # Bouton pour acc√©der √† la deuxi√®me page (second.py)
    if st.button("Commencer l'exerciceüèÜ "):
        st.success("Bonne chance pour l'exercice !")
        # Utilisation de os.system pour lancer second.py
        st.switch_page('2_Quizz.py')

if __name__ == "__main__":
    afficher_tutoriel()
